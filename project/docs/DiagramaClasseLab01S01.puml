@startuml Diagrama de classe universidade
scale 2
left to right direction 

skinparam ClassAttributeIconSize 0
class Usuario{
    -String login
    -String senha
}

class Secretario{
    -List<Secretario> secretarios
    +Secretario getById(String identifier)
    +void addToList(Secretario secretario)
    +void gerarCurriculo()
    +Boolean abrirMatriculas()
    +Boolean encerrarMatriculas()
}


class Professor{
    -List<Professor> professores
    +Secretario getById(String identifier)
    +void addToList(Professor professor)
    +void consultarMatriculas(Turma turma)
}

class Aluno{
    -List<Aluno> alunos
    -List<Diciplina> diciplinas
    +Aluno getById(String identifier)
    +void addToList(Aluno aluno)
    +void matricularEmDisciplina(Disciplina disciplina)
    +void cancelarMatriculaDisciplina(Disciplina disciplina)
    -Double calcularMensalidade()
    +void pagarDisciplinas(Scanner scan)
    +void visualizarDisciplinas()

}

class Curso{
    -String nome
    -Int creditos
    -String[] disciplinasIds
    +Curso getById(String identifier)
}

class Disciplina{
    -String nome
    -Boolean ativa
    -Boolean isMatriculasAbertas
    -List<Disciplina> disciplinas
    +void addToList(Disciplina disciplina)
    +Disciplina getById(String identifier)
}

class Turma{
    -String name
    -String professorId
    -String dusciplinaId
    -List<Aluno> alunos
    -List<Turma> turmas
    -int nextId
    -int MIN_ALUNOS
    -int MAX_ALUNOS
    -String generateId()
    +Turma getById(String identifier)
    +void addToList(Turma turma)
    +List<Aluno> getAlunos()
    +Boolean addAluno(Aluno aluno)
    +Boolean isTurmaCheia()
    +Turma getByDisciplinaId(String disciplinaId)
}

Usuario <|-- Secretario

Usuario <|-- Professor

Usuario <|-- Aluno

Curso *-- Disciplina

Turma *-- Disciplina

Turma *-- Professor

Turma *-- Aluno

Professor <-- Turma

Aluno o-- Disciplina

@enduml